// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int       @id @default(autoincrement())
  uuid              String    @unique @default(uuid())
  username          String
  email             String
  password          String
  bio               String?   @default("this user doesnt have a bio")
  createdAt         DateTime  @default(now())
  updateAt          DateTime  @updatedAt
  posts             Post[]
  comments          Comment[]
  userReactions     Reactions?
}

model Post {
  id        Int        @id @default(autoincrement())
  uuid      String     @unique @default(uuid())
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  body      String
  comments  Comment[]
  commentsLength Int   @default(0)
  reactions PostReaction[]
  reactionsLength Int @default(0)
}

model Comment {
  id        Int        @id @default(autoincrement())
  uuid      String     @default(uuid())
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  post      Post       @relation(fields: [postId], references: [id])
  postId    Int
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  body      String
  reactions CommentReaction[]
  reactionsLength Int @default(0)
}

model Reactions {
  id              Int             @id @default(autoincrement())
  uuid            String          @default(uuid()) @unique
  createdAt       DateTime        @default(now())
  updateAt        DateTime        @updatedAt
  user            User            @relation(fields: [userId],references:[id])
  userId          Int
  postsReactions  PostReaction[]
  postsReactionsLength Int @default(0)
  commentReactions CommentReaction[]
  commentReactionsLength Int @default(0)
}

model PostReaction {
  id         Int           @id @default(autoincrement())
  uuid       String        @default(uuid()) @unique
  createdAt  DateTime      @default(now())
  updateAt   DateTime      @updatedAt
  type       String        @default("Like")
  reaction   Reactions     @relation(fields: [reactionId], references:[id])
  reactionId Int
  post       Post          @relation(fields: [postId], references: [id])
  postId     Int
}

model CommentReaction {
  id         Int           @id @default(autoincrement())
  uuid       String        @default(uuid()) @unique
  createdAt  DateTime      @default(now())
  updateAt   DateTime      @updatedAt
  type       String        @default("Like")
  reaction   Reactions     @relation(fields: [reactionId], references:[id])
  reactionId Int
  comment    Comment       @relation(fields: [commentId], references: [id])
  commentId  Int
}

